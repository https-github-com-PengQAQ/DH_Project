// /*
//  * Tencent is pleased to support the open source community by making xLua available.
//  * Copyright (C) 2016 THL A29 Limited, a Tencent company. All rights reserved.
//  * Licensed under the MIT License (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at
//  * http://opensource.org/licenses/MIT
//  * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
// */
//
// using System.Collections.Generic;
// using System;
// using UnityEngine;
// using UnityEngine.Networking;
// using XLua;
// using DG.Tweening;
// using BestHTTP;
// using Coffee.UIExtensions;
// using DHGames.HotUpdate;
// using TinyPinyin;
// using Action = System.Action;
//
// //配置的详细介绍请看Doc下《XLua的配置.doc》
// public static class LuaGenConfig
// {
//     //[ReflectionUse]
//
//     //lua中要使用到C#库的配置，比如C#标准库，或者Unity API，第三方库等。
//     [LuaCallCSharp]
//     public static List<Type> mymodule_lua_call_cs_list = new List<Type>() {
//         typeof(System.Object),
//         typeof(System.IO.Directory),
//         typeof(System.IO.File),
//         typeof(UnityEngine.Object),
//         typeof(Vector2),
//         typeof(Vector3),
//         typeof(Vector4),
//         typeof(Quaternion),
//         typeof(Color),
//         typeof(Ray),
//         typeof(Bounds),
//         typeof(Ray2D),
//         typeof(Time),
//         typeof(GameObject),
//         typeof(Component),
//         typeof(Behaviour),
//         typeof(Transform),
//         typeof(Resources),
//         typeof(TextAsset),
//         typeof(Keyframe),
//         typeof(UnityWebRequest),
//         typeof(DownloadHandler),
//         typeof(DownloadHandlerBuffer),
//         typeof(Animation),
//         typeof(AnimationCurve),
//         typeof(AnimationClip),
//         typeof(MonoBehaviour),
//         typeof(ParticleSystem),
//         typeof(ParticleSystem.MainModule),
//         typeof(MeshRenderer),
//         typeof(SkinnedMeshRenderer),
//         typeof(Renderer),
//         typeof(RectTransformUtility),
//         typeof(System.Collections.Generic.List<int>),
//         typeof(Action<string>),
//         typeof(TimeSpan),
//         typeof(UnityEngine.Debug),
//         typeof(RaycastHit),
//         typeof(UnityEngine.Mathf),
//         typeof(UnityEngine.Application),
//         typeof(PlayerPrefs),
//         typeof(UnityEngine.AI.NavMeshAgent),
//         typeof(BoxCollider),
//         typeof(Animator),
//         typeof(UnityEngine.AudioSource),
//         typeof(UnityEngine.AudioClip),
//         typeof(UnityEngine.SceneManagement.SceneManager),
//         typeof(UnityEngine.SceneManagement.Scene),
//         typeof(Camera),
//         typeof(Canvas),
//         typeof(Material),
//         typeof(Shader),
//         typeof(RenderTexture),
//         typeof(AssetBundle),
//         typeof(AssetBundleManifest),
//         typeof(LayerMask),
//         typeof(MaterialPropertyBlock),
//         typeof(SystemLanguage),
//         typeof(AssetBundleCreateRequest),
//         typeof(AsyncOperation),
//         typeof(AssetBundleRequest),
//         typeof(Input),
//         typeof(TouchPhase),
//         typeof(RuntimePlatform),
//         typeof(TextAnchor),
//         typeof(RectTransform),
//         typeof(UnityEngine.UI.Image),
//         typeof(UnityEngine.UI.Text),
//         typeof(UnityEngine.UI.InputField),
//         typeof(Sprite),
//         typeof(UnityEngine.UI.ScrollRect),
//         typeof(ParticleSystemRenderer),
//         typeof(ParticleSystem.MainModule),
//         typeof(UnityEngine.UI.Toggle),
//         typeof(UnityEngine.UI.ToggleGroup),
//         typeof(UnityEngine.UI.GraphicRaycaster),
//         typeof(UnityEngine.UI.ContentSizeFitter),
//         typeof(Screen),
//         typeof(SleepTimeout),
//         typeof(TrailRenderer),
//         typeof(SpriteRenderer),
//         typeof(DHGames.GameUtils),
//         typeof(Coffee.UIExtensions.UIEffect),
//         typeof(SkillEffectsHelper),
//         typeof(UnityEngine.UI.LoopVerticalScrollRect),
//         typeof(UnityEngine.UI.LoopScrollRect),
//         typeof(SG.Pool),
//         typeof(SpecialToggle),
//         typeof(UnityEngine.UI.Dropdown),
//         typeof(UnityEngine.UI.Dropdown.OptionDataList),
//         typeof(UnityEngine.UI.Dropdown.OptionData),
//         typeof(UnityEngine.CanvasGroup),
//         typeof(UnityEngine.Events.UnityEventBase),
//         typeof(UnityEngine.Events.UnityEvent),
//         typeof(UnityEngine.AnimatorClipInfo),
//         typeof(UnityEngine.RuntimeAnimatorController),
//         typeof(UnityEngine.AnimationClip),
//         typeof(UnityEngine.AnimatorStateInfo),
//         typeof(NotchProperty),
//         typeof(NotchType),
//         typeof(GameStatistics),
//         typeof(UnityEngine.UI.ScrollRect.MovementType),
//         typeof(SystemInfo),
//         typeof(NetworkReachability),
//         typeof(FontStyle),
//
//         typeof(DHGames.Rc4Encrypt),
//         typeof(DHGames.RsaEncrypt),
//         typeof(NetSecProtect),
//         typeof(SDKManager),
//         typeof(Rename.Physics),
//         typeof(Rename.EventSystem),
//         typeof(LuaUtil),
//         typeof(Controller),
//         typeof(NameMapInfo),
//         typeof(LuaBehaviour),
//         typeof(AESEncryption),
//         typeof(ZipHelper),
//         typeof(Util),
//         typeof(DH.UI.PageView),
//         typeof(DH.UI.DHPageViewDirection),
//         typeof(SchedulerUtil),
//         typeof(DHLogManager),
//         typeof(LuaUtil),
//         typeof(DH.UI.PageView),
//         typeof(Coffee.UIExtensions.UIGradient),
//         typeof(CircleImage),
//         typeof(UnityEngine.UI.MaskableGraphic),
//         typeof(ToggleScaleAnimation),
//         typeof(ButtonScaleAnimation),
//         typeof(LongPressListener),
//         typeof(BestHTTP.WebSocket.WebSocket),
//         typeof(BestHTTP.HTTPRequest),
//         typeof(BestHTTP.HTTPResponse), 
//         typeof(BestHTTP.HTTPRequestStates),
//         typeof(BestHTTP.HTTPMethods),
//         typeof(BestHTTP.Forms.HTTPFormBase),
//         typeof(BestHTTP.Forms.RawJsonForm),
//         typeof(BestHTTP.Forms.HTTPMultiPartForm),
//         typeof(BestHTTP.Forms.HTTPUrlEncodedForm),
//         typeof(BestHTTP.WebSocket.WebSocketStates),
//         typeof(BestHTTP.WebSocket.WebSocketStausCodes),
//         typeof(UnityEngine.ShaderVariantCollection),
//         typeof(UIParticle),
//         //这里是手势插件
//         typeof(DragRecognizer),
//         typeof(GestureRecognizer),
//         typeof(ContinuousGestureRecognizer<DragGesture>),
//         typeof(ContinuousGesture),
//         typeof(LongPressRecognizer),
//         typeof(PinchRecognizer),
//         typeof(PointCloudRegognizer),
//         typeof(SwipeRecognizer),
//         typeof(TapRecognizer),
//         typeof(TwistRecognizer),
//         typeof(DragGesture),
//         typeof(LongPressGesture),
//         typeof(PinchGesture),
//         typeof(PointCloudGesture),
//         typeof(SwipeGesture),
//         typeof(TapGesture),
//         typeof(TwistGesture),
//         typeof(ContinuousGesturePhase),
//         //spine
//         typeof(Spine.Unity.SkeletonAnimation),
//         typeof(Spine.Unity.SkeletonGraphic),
//         typeof(Spine.AnimationState),
//         typeof(Spine.TrackEntry),
//         typeof(Spine.Animation),
//         typeof(Spine.Event),
//         typeof(Spine.Bone),
//         typeof(Spine.Slot),
//         typeof(Spine.Skeleton),
//         typeof(Spine.SkeletonData),
//         typeof(Spine.SkeletonBounds),
//
//         //Dotween
//         typeof(DG.Tweening.AutoPlay),
//         typeof(DG.Tweening.AxisConstraint),
//         typeof(DG.Tweening.Ease),
//         typeof(DG.Tweening.LogBehaviour),
//         typeof(DG.Tweening.LoopType),
//         typeof(DG.Tweening.PathMode),
//         typeof(DG.Tweening.PathType),
//         typeof(DG.Tweening.RotateMode),
//         typeof(DG.Tweening.ScrambleMode),
//         typeof(DG.Tweening.TweenType),
//         typeof(DG.Tweening.UpdateType),
//
//         typeof(DG.Tweening.DOTween),
//         typeof(DG.Tweening.DOVirtual),
//         typeof(DG.Tweening.EaseFactory),
//         typeof(DG.Tweening.Tweener),
//         typeof(DG.Tweening.Tween),
//         typeof(DG.Tweening.Sequence),
//         typeof(DG.Tweening.TweenParams),
//         typeof(DG.Tweening.Core.ABSSequentiable),
//         typeof(DG.Tweening.Core.TweenerCore<Vector3, Vector3, DG.Tweening.Plugins.Options.VectorOptions>),
//         typeof(DG.Tweening.TweenCallback),
//         typeof(DG.Tweening.TweenExtensions),
//         typeof(DG.Tweening.TweenSettingsExtensions),
//         typeof(DG.Tweening.ShortcutExtensions),
//         typeof(DG.Tweening.DOTweenModuleUI),
//         typeof(Uri),
//         typeof(DHGames.HotUpdate.DataCenter),
//         typeof(DHGames.HotUpdate.ErrorFileInfo),
//         typeof(DHGames.HotUpdate.CompleteResult),
//         typeof(DHGames.HotUpdate.CheckResult),
//         typeof(DHGames.HotUpdate.ProgressResult),
//         typeof(DHGames.HotUpdate.VersionUtil),
//         typeof(DHGames.HotUpdate.Const),
//         typeof(DHGames.HotUpdate.Controller),
//         typeof(DHGames.HotUpdate.AD2Controller),
//         typeof(DHGames.HotUpdate.AssetBundleJsonFile),
//         typeof(DHGames.HotUpdate.AssetBundleData),
//         typeof(DHGames.HotUpdate.Status),
//         typeof(DHGames.HotUpdate.HotUpdateType),
//         typeof(DHGames.HotUpdate.ERROR_CODE),
//         //GM插件
//         typeof(PinyinHelper),
//         typeof(BattleUtils)
//      };
//
//     //C#静态调用Lua的配置（包括事件的原型），仅可以配delegate，interface
//     [CSharpCallLua]
//     public static List<Type> CSharpCallLua = new List<Type>() {
//         typeof(Action),
//         typeof(Func<double, double, double>),
//         typeof(UnityEngine.Events.UnityAction<int>),
//         typeof(Action<Int32>),
//         typeof(Action<string>),
//         typeof(Action<long>),
//         typeof(Action<int,string>),
//         typeof(Action<string,int>),
//         typeof(Action<double>),
//         typeof(Action<bool>),
//         typeof(Action<AsyncOperation>),
//         typeof(Action<string, string, LogType>),
//         typeof(Action<DHGames.HotUpdate.CompleteResult>),
//         typeof(Action<DHGames.HotUpdate.CheckResult>),
//         typeof(Action<DHGames.HotUpdate.ErrorFileInfo>),
//         typeof(Action<DHGames.HotUpdate.ProgressResult>),
//         typeof(Application.LogCallback),
//         typeof(Action<Collider>),
//         typeof(Action<HostInfo>),
//         typeof(Action<GameObject,object,int>),
//         typeof(Action<SG.Pool>),
//         typeof(Action<UnityEngine.EventSystems.PointerEventData>),
//         typeof(UnityEngine.Events.UnityAction),
//         typeof(UnityEngine.Events.UnityAction<bool>),
//         typeof(System.Collections.IEnumerator),
//         typeof(UnityEngine.Application.LogCallback),
//         typeof(UnityEngine.Events.UnityAction<Vector2>),
//         typeof(UnityEngine.Events.UnityAction<UnityEngine.EventSystems.BaseEventData>),
//         typeof(System.Func<bool>),
//         typeof(Spine.AnimationState.TrackEntryDelegate),
//         typeof(Spine.AnimationState.TrackEntryEventDelegate),
//         typeof(DG.Tweening.TweenCallback),
//         typeof(DG.Tweening.Core.DOGetter<double>),
//         typeof(DG.Tweening.Core.DOSetter<double>),
//         typeof(DG.Tweening.Core.DOGetter<float>),
//         typeof(DG.Tweening.Core.DOSetter<float>),
//         typeof(DG.Tweening.Core.DOGetter<Vector2>),
//         typeof(DG.Tweening.Core.DOSetter<Vector2>),
//
//         typeof(Application.LowMemoryCallback),
//
//         typeof(GestureRecognizerTS<DragGesture>.GestureEventHandler),
//         typeof(GestureRecognizerTS<LongPressGesture>.GestureEventHandler),
//         typeof(GestureRecognizerTS<PinchGesture>.GestureEventHandler),
//         typeof(GestureRecognizerTS<PointCloudGesture>.GestureEventHandler),
//         typeof(GestureRecognizerTS<SwipeGesture>.GestureEventHandler),
//         typeof(GestureRecognizerTS<TwistGesture>.GestureEventHandler),
//
//         typeof(BestHTTP.WebSocket.OnWebSocketOpenDelegate),
//         typeof(BestHTTP.WebSocket.OnWebSocketMessageDelegate),
//         typeof(BestHTTP.WebSocket.OnWebSocketClosedDelegate),
//         typeof(BestHTTP.WebSocket.OnWebSocketErrorDelegate),
//         typeof(BestHTTP.WebSocket.OnWebSocketBinaryDelegate),
//         typeof(BestHTTP.WebSocket.OnWebSocketErrorDescriptionDelegate),
//         
//         typeof(BestHTTP.OnRequestFinishedDelegate),
//         typeof(BestHTTP.OnDownloadProgressDelegate),
//         typeof(BestHTTP.OnUploadProgressDelegate),
//
//         typeof(HostInfo)
//     };
//
//     //黑名单
//     [BlackList]
//     public static List<List<string>> BlackList = new List<List<string>>()  {
//         new List<string>(){"UnityEngine.UI.Text", "OnRebuildRequested"},
//         new List<string>(){"UnityEngine.Texture2D", "alphaIsTransparency"},
//         new List<string>(){"UnityEngine.CanvasRenderer", "onRequestRebuild"},
//         new List<string>(){"UnityEngine.Light", "areaSize"},
//         new List<string>(){"UnityEngine.AnimatorOverrideController", "PerformOverrideClipListCleanup"},
//         new List<string>(){"UnityEngine.Input", "location"},
// #if !UNITY_WEBPLAYER
//         new List<string>(){"UnityEngine.Application", "ExternalEval"},
// #endif
//         new List<string>(){"System.IO.Directory", "CreateDirectory", "System.String", "System.Security.AccessControl.DirectorySecurity"},
//         new List<string>(){"System.IO.Directory", "SetAccessControl", "System.String", "System.Security.AccessControl.DirectorySecurity"},
//         new List<string>(){"System.IO.Directory", "GetAccessControl", "System.String"},
//         new List<string>(){"System.IO.Directory", "GetAccessControl", "System.String", "System.Security.AccessControl.AccessControlSections"},
//         new List<string>(){"System.IO.File", "Create", "System.String", "System.Int32", "System.IO.FileOptions"},
//         new List<string>(){"System.IO.File", "Create", "System.String", "System.Int32", "System.IO.FileOptions", "System.Security.AccessControl.FileSecurity"},
//         new List<string>(){"System.IO.File", "SetAccessControl", "System.String", "System.Security.AccessControl.FileSecurity"},
//         new List<string>(){"System.IO.File", "GetAccessControl", "System.String"},
//         new List<string>(){"System.IO.File", "GetAccessControl", "System.String", "System.Security.AccessControl.AccessControlSections"},
//         new List<string>(){"System.IO.SrvFileInfo", "GetAccessControl", "System.Security.AccessControl.AccessControlSections"},
//         new List<string>(){"System.IO.SrvFileInfo", "SetAccessControl", "System.Security.AccessControl.FileSecurity"},
//         new List<string>(){"System.IO.DirectoryInfo", "GetAccessControl", "System.Security.AccessControl.AccessControlSections"},
//         new List<string>(){"System.IO.DirectoryInfo", "SetAccessControl", "System.Security.AccessControl.DirectorySecurity"},
//         new List<string>(){"System.IO.DirectoryInfo", "CreateSubdirectory", "System.String", "System.Security.AccessControl.DirectorySecurity"},
//         new List<string>(){"System.IO.DirectoryInfo", "Create", "System.Security.AccessControl.DirectorySecurity"},
//         new List<string>(){"UnityEngine.MonoBehaviour", "runInEditMode"},
//         new List<string>(){"UnityEngine.Input", "IsJoystickPreconfigured", "System.String"},
//         new List<string>(){"UnityEngine.WWW", "GetMovieTexture"},
//         new List<string>(){"Coffee.UIExtensions.UIEffect", "OnBeforeSerialize"},
//         new List<string>(){"Coffee.UIExtensions.UIEffect", "OnAfterDeserialize"},
//         new List<string>(){"Coffee.UIExtensions.UIEffect", "GetMaterial", "UnityEngine.Shader", "Coffee.UIExtensions.UIEffect+ToneMode", "Coffee.UIExtensions.UIEffect+ColorMode", "Coffee.UIExtensions.UIEffect+BlurMode"},
//         new List<string>(){"Coffee.UIExtensions.UIEffect", "GetOrGenerateMaterialVariant", "UnityEngine.Shader", "Coffee.UIExtensions.UIEffect+ToneMode", "Coffee.UIExtensions.UIEffect+ColorMode", "Coffee.UIExtensions.UIEffect+BlurMode"},
//         new List<string>(){"Coffee.UIExtensions.UIEffect", "GetDefaultMaterialPath", "UnityEngine.Shader"},
//         new List<string>(){"Coffee.UIExtensions.UIEffect", "GetVariantName", "UnityEngine.Shader", "Coffee.UIExtensions.UIEffect+ToneMode", "Coffee.UIExtensions.UIEffect+ColorMode", "Coffee.UIExtensions.UIEffect+BlurMode"},
//         //禁用这个接口的导出是因为性能差
//         new List<string>(){"UnityEngine.GameObject", "GetComponent", "System.String"},
//     };
//
// }
